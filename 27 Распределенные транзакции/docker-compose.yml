version: '3'

networks:
  net27:
    driver: bridge

services:
  pg:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=soc_net
    networks:
      - net27
    volumes:
      - F:\OTUS\HighLoad\db\hw27\socnet\pg:/var/lib/postgresql/data
    command:
       -c shared_preload_libraries=pg_stat_statements 
       -c pg_stat_statements.track=all
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    volumes:
      - F:\OTUS\HighLoad\db\hw27\socnet\zookeeper\data:/var/lib/zookeeper/data
      - F:\OTUS\HighLoad\db\hw27\socnet\zookeeper\log:/var/lib/zookeeper/log
    user: root
    networks:
      - net27
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - F:\OTUS\HighLoad\db\hw27\socnet\kafka\data:/var/lib/kafka/data
    user: root
    networks:
      - net27
  resources:
    build:
      context: .\resources
      dockerfile: Dockerfile
    container_name: resources
    ports:
      - "8080:8080"
    networks:
      - net27
    environment:
      - DB_URL=jdbc:postgresql://pg:5432/soc_net
      - DB_USER=postgres
      - DB_PASS=pass
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - pg
      - kafka
      - zookeeper