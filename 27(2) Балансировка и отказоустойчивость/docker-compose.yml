networks:
  net27_2:
    driver: bridge

services:
  db_socnetmaster:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=soc_net
    networks:
      - net27_2
    volumes:
      - F:\OTUS\HighLoad\db\hw27(2)\socnetmaster:/var/lib/postgresql/data
    cpu_count: 1
    mem_limit: 1gb
    restart: unless-stopped
    command:
       -c shared_preload_libraries=pg_stat_statements
       -c pg_stat_statements.track=all
       -c max_connections=200

  db_socnetslave1:
    image: postgres:16
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=soc_net
    networks:
      - net27_2
    volumes:
      - F:\OTUS\HighLoad\db\hw27(2)\socnetslave1:/var/lib/postgresql/data
    cpu_count: 1
    mem_limit: 1gb
    restart: unless-stopped
    command:
       -c shared_preload_libraries=pg_stat_statements 
       -c pg_stat_statements.track=all
       -c max_connections=200
    depends_on:
       - db_socnetmaster

  db_socnetslave2:
    image: postgres:16
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=postgres
      - POSTGRES_DB=soc_net
    networks:
      - net27_2
    volumes:
      - F:\OTUS\HighLoad\db\hw27(2)\socnetslave2:/var/lib/postgresql/data
    cpu_count: 1
    mem_limit: 1gb
    restart: unless-stopped
    command:
       -c shared_preload_libraries=pg_stat_statements 
       -c pg_stat_statements.track=all
       -c max_connections=200
    depends_on:
       - db_socnetmaster

  haproxy:
    image: haproxy:3.1.1
    restart: "no"
    networks:
      - net27_2
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "4080:80"
    depends_on:
       - db_socnetslave1
       - db_socnetslave2

  app_master:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "8080:8080"
    networks:
      - net27_2
    environment:
      - DB_URL=jdbc:postgresql://db_socnetmaster:5432/soc_net
      - DB_USER=postgres
      - DB_PASS=pass
      - LIQUIBASE_ENABLED=true
    depends_on:
      - db_socnetmaster

  app_replica_1:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "8081:8080"
    networks:
      - net27_2
    environment:
      - DB_URL=jdbc:postgresql://haproxy:80/soc_net
      - DB_USER=postgres
      - DB_PASS=pass
      - LIQUIBASE_ENABLED=false
    depends_on:
      - app_master
      - haproxy

  app_replica_2:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "8082:8080"
    networks:
      - net27_2
    environment:
      - DB_URL=jdbc:postgresql://haproxy:80/soc_net
      - DB_USER=postgres
      - DB_PASS=pass
      - LIQUIBASE_ENABLED=false
    depends_on:
      - app_master
      - haproxy


  app_replica_3:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "8083:8080"
    networks:
      - net27_2
    environment:
      - DB_URL=jdbc:postgresql://haproxy:80/soc_net
      - DB_USER=postgres
      - DB_PASS=pass
      - LIQUIBASE_ENABLED=false
    depends_on:
      - app_master
      - haproxy

  nginx:
    image: nginx:1.27.3
    restart: on-failure
    networks:
      - net27_2
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "4088:80"
      - "4098:8080"
    depends_on:
      - app_replica_1
      - app_replica_2
      - app_replica_3
      - haproxy
